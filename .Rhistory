points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data = data, probe = "cd3")
str(data)
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "#f23e10", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(is.integer(assayColumn) == TRUE){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",toupper(probe))
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn] )
plot(data@xyData[,1], data@xyData[,2], pch = 20, col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data = data, probe = "cd3")
data@phenoData
data@experimentData
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
probeColumn
probe <- "cd3"
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
probeColumn
class(probeColumn)
as.numeric(probeColumn)
probe <- "cd9"
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
probeColumn
as.numeric(probeColumn)
class(probeColumn)
length(probeColumn)
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "#f23e10", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",toupper(probe))
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn] )
plot(data@xyData[,1], data@xyData[,2], pch = 20, col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, probe = "cd3")
plotCells <- function(x, probe = NULL, threshold = 35.1,
pch = 20,
cex = 0.8, probeCol = "#ff0000",
density = 60){
if(is.null(probe) != TRUE){
column <- grep(colnames(x), pattern = probe, ignore.case = TRUE, fixed = FALSE)
probeData <- x[,column]
selection <- probeData > threshold
}
main.text <- toupper(probe)
pos.cells <- positiveCells(x = x, probe = probe, threshold = threshold)
total.cells <- dim(x)[1]
percent.pos.cells <- round((100/total.cells)*pos.cells, digits = 2)
sub.text <- paste("Total positive cells:", sub.text )
plot(x$inner_x, x$inner_y, pch = 20, posCol = "#00000020",
main = main.text,
xlab = "inner_x",
ylab = "inner_y")
mtext(sub.text, side = 3, cex = 1)
posColor <- paste0(probeCol, as.character(density))
posColor <- rep(posColor, length(probeData))
points(x$inner_x[selection], x$inner_y[selection],
pch = pch, cex = cex,
col = posColor[selection])
}
### S4
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "#f23e10", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",toupper(probe))
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn] )
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, probe = "cd3")
GetColorHex("yellow")
GetColorHexandDecimal("yellow")
library(color)
GetColorHexAndDecimal <- function(color)
{
c <- col2rgb(color)
sprintf("#%02X%02X%02X   %3d %3d %3d", c[1],c[2],c[3], c[1], c[2], c[3])
}
GetColorHexandDecimal("yellow")
GetColorHexAndDecimal("red")
GetColorHex <- function(color)
{
c <- col2rgb(color)
sprintf("#%02X%02X%02X   %3d %3d %3d", c[1],c[2],c[3], c[1], c[2], c[3])
}
col2rgb(color)
color <- "red"
c <- col2rgb(color)
c
sprintf("#%02X%02X%02X   %3d %3d %3d", c[1],c[2],c[3], c[1], c[2], c[3])
c[1]
c[2]
c[3]
c[1]
c[2]
c[3]
GetColorHex <- function(color)
{
c <- col2rgb(color)
sprintf("#%02X%02X%02x", c[1],c[2],c[3])
}
GetColorHex("red")
GetColorHex("blue")
GetColorHex("lightblue")
GetColorHex("lighe")
substr(posCol, 1, 1)
!= "#"
substr(posCol, 1, 1) != "#"
posCol = "red"
substr(posCol, 1, 1) != "#"
posCol = "green"
posCol <- GetColorHex(posCol)
posCells
posCol
posCol <- "greb"
posCol <- GetColorHex(posCol)
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",toupper(probe))
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn] )
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, "cd8")
plotCells(data, "cd8", posCol = "darkgreen")
plotCells(data, "cd8", posCol = "darkgree")
plotCells(data, "cd8", posCol = "darkgreen")
plotCells(data, "cd8", posCol = "purple")
data@experimentData
data@experimentData
plotCells(data, "163", posCol = "rood")
plotCells(data, "163", posCol = "red")
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",toupper(probe))
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.middle <- paste("Positive Ratio:", data@experimentData['posRatio', probeColumn])
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn])
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.middle, side = 3, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, "163", posCol = "red")
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",toupper(probe))
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.middle <- paste("Positive Ratio:", round(data@experimentData['posRatio', probeColumn]), digits = 2)
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn])
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.middle, side = 3, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, "163", posCol = "red")
data@experimentData
plotCells(data, "CD163", posCol = "red")
data@phenoData
paste(data@phenoData['samplename', 1] , ":",colnames(experimentData)[probeColumn])
colnames(data@experimentData)[probeColumn]
colnames(data@experimentData)
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",colnames(data@experimentData)[probeColumn])
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.middle <- paste("Positive Ratio:", round(data@experimentData['posRatio', probeColumn]), digits = 2)
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn])
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.middle, side = 3, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
paste(data@phenoData['samplename', 1] , ":",colnames(experimentData)[probeColumn])
plotCells(data, "CD163", posCol = "red")
plotCells(data, "CD1", posCol = "red")
plotCells(data, "pax", posCol = "red")
mtext("Magnifiation: 40x", side = 4 , adj = 0, cex = 0.8)
magnification.text <- paste0("Magnification: ", magnification,"x")
magnification = 40
magnification.text <- paste0("Magnification: ", magnification,"x")
mtext(magnification.text, side = 4 , adj = 0, cex = 0.8)
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.middle, side = 3, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
mtext(magnification.text, side = 4 , adj = 0, cex = 0.8)
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80, magnification = 40){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",colnames(data@experimentData)[probeColumn])
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.middle <- paste("Positive Ratio:", round(data@experimentData['posRatio', probeColumn]), digits = 2)
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn])
magnification.text <- paste0("Magnification: ", magnification,"x")
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.middle, side = 3, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
mtext(magnification.text, side = 4 , adj = 0, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, probe = "pax")
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80, magnification = 40){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",colnames(data@experimentData)[probeColumn])
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.middle <- paste("Positive Ratio:", round(data@experimentData['posRatio', probeColumn]), digits = 2)
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn])
magnification.text <- paste0("Magnification: ", magnification,"x")
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.7)
mtext(sub.text.middle, side = 3, cex = 0.7)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.7)
mtext(magnification.text, side = 4 , adj = 0, cex = 0.7)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
plotCells(data, probe = "pax")
plotCells <- function(data = NULL, probe = NULL,
pch = 20, cex = 0.8,
posCol = "green", density = 80, magnification = 40){
if((class(data)[1] == "MPIFdata") != TRUE){
stop("data structure is not in the correct format.\n\n")
}
if(is.null(probe) == TRUE){
stop("No probe name was given for plotting.\n ")
}
if(substr(posCol, 1, 1) != "#"){
posCol <- GetColorHex(posCol)
}
probeColumn <- grep(colnames(data@assayData), pattern = probe, ignore.case = TRUE, fixed = FALSE)
if(length(probeColumn) == 0){
stop("Probe can not be found in data.\n")
}
main.text <- paste(data@phenoData['samplename', 1] , ":",colnames(data@experimentData)[probeColumn])
sub.text.left <- paste("Total cells:", data@experimentData['totalCount', probeColumn])
sub.text.middle <- paste("Positive Ratio:", round(data@experimentData['posRatio', probeColumn]), digits = 2)
sub.text.right <- paste("Total positive cells:", data@experimentData['posCount', probeColumn])
magnification.text <- paste0("Magnification: ", magnification,"x")
plot(data@xyData[,1], data@xyData[,2],
pch = 20, cex = cex,
col = "#00000020",
main = main.text,
xlab = colnames(data@xyData)[1],
ylab = colnames(data@xyData)[2])
mtext(sub.text.left, side = 3, adj = 0, cex = 0.8)
mtext(sub.text.middle, side = 3, cex = 0.8)
mtext(sub.text.right, side = 3, adj = 1, cex = 0.8)
mtext(magnification.text, side = 4 , adj = 0, cex = 0.8)
posColor <- paste0(posCol, as.character(density))
posColor <- rep(posColor, dim(data@assayData)[1])
posCells <- data@posCellData[, probeColumn]
points(x = data@xyData[posCells,1], y = data@xyData[posCells,2],
pch = pch, cex = cex,
col = posColor[posCells])
}
print(getwd)
print(getwd())
data@experimentData
outputfile <- "text.xlsx"
getwd()
write.xlsx(x = data@experimentData, file = outputfile, sheetname = "Blad1")
write.xlsx(x = data@experimentData, file = outputfile)
write.table(x = data@experimentData, file = outputfile, sep = "\t")
outputfile <- "text.txt"
write.table(x = data@experimentData, file = outputfile, sep = "\t")
write.table(x = data@experimentData, file = outputfile, sep = "\t", row.names = TRUE)
outputfile <- "text.csv"
write.table(x = data@experimentData, file = outputfile, sep = ";")
data.path <- "\\\\vumc.nl/onderzoek$/s4e-gpfs1/pa-tgac-01/analisten/Dirk/r_scripts/DuoBody_Analysis/data"
files <- list.files(data.path, pattern = ".xlsx", full.names = TRUE)
files
data <- readMPIFfile(files[2])
str(data)
data@assayData
data@posCellData
data@xyData
data@experimentData
plotCells(data, probe = "cd8")
plotCells(data, probe = "cd8", density = 100)
plotCells(data, probe = "cd8", density = 90)
plotCells(data, probe = "cd8", density = 10)
plotCells(data, probe = "cd8", density = 10, posCol = "purple")
plotCells(data, probe = "cd8", density = 40, posCol = "purple")
plotCells(data, probe = "cd8", density = 40, posCol = "purple", pch = 23)
plotCells(data, probe = "cd8", density = 10, posCol = "purple", magnification = 100)
plotCells(data, probe = "pax", density = 10, posCol = "purple", magnification = 100)
plotCells(data, probe = "pax", density = 50, posCol = "purple", magnification = 100)
data@phenoData

